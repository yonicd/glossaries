get_entries()
install.packages('pak')
pak::pkg_install('ggeffects')
pak::pkg_install('ggeffects')
utils::install.packages('pak', repos = 'https://r-lib.github.io/p/pak/dev/')
pak::pkg_install('ggeffects')
pak::pak_setup()
pak::pkg_install('ggeffects')
ggeffects:::ggeffect
ggeffects:::get_predictions_coxph
ggeffects:::plot.ggeffects
survival::coxph
survival::coxph
?match.arg()
library(glossaries)
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
type
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
type
type
library(glossaries)
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
type
match.call()
match.fun()
match.fun(get_entries)
get_entries()
library(glossaries)
get_entries()
type
g$list_entries()
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
library(glossaries)
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
lapply(get_entries(),'[[',1)
library(glossaries)
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
lapply(get_entries(),'[[',1)
sapply(get_entries(),'[[',1)
sapply(get_entries(),'[[',1)%in%c('definition','acronym')
sapply(get_entries(),'[[',1)%in%c('definition')
library(glossaries)
library(glossaries)
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries()
get_entries('acronyms')
get_entries('acronym')
get_entries('definition')
get_entries()%>%
glossary_to_table()
library(magrittr)
get_entries()%>%
glossary_to_table()
get_entries('acronym')%>%
glossary_to_table()
get_entries('definition')%>%
glossary_to_table()
?attr
library(glossaries)
add_entry('tree','tree','trees are the better humans')
add_entry('sea','Sea','oceans are better than trees')
add_acronym('cd','CD','compact disk')
update_entry('sea','Sea','oceans are better than trees')
get_entries('definition')%>%
glossary_to_table()
x <- get_entries('definition')%>%
glossary_to_table()
attributes(x)
get_entries('definition')%>%
glossary_to_table()%>%
gt::gt()
get_entries('acronym')%>%
glossary_to_table()%>%
gt::gt()
get_entries()%>%
glossary_to_table()
get_entries()%>%
glossary_to_table()%>%
gt::gt()
get_entries()
get_entries()%>%yaml::as.yaml()
get_entries()%>%yaml::as.yaml()%>%cat(sep='\n')
x <- get_entries()
names(x) <- NULL
x
x%>%yaml::as.yaml()%>%cat(sep='\n')
x <- get_entries()
x$tree
idx <- sapply(x,'[[',1)%in%type
idx <- sapply(x,'[[',1)
idx
x[c(1,2)]
x[c(1,2)]['label']
x[c(1,2)][['label']]
lapply(x[c(1,2)],function(xx) x['label'])
lapply(x[c(1,2)],function(xx) x$label)
lapply(x[c(1,2)],function(xx) xx$label)
lapply(x[c(1,2)],function(xx) xx['label'])
lapply(x[c(1,2)],function(xx) xx[c('label','definition')])
lapply(x[c(1,2)],function(xx) xx[c('label','description')])
list(definitions = lapply(x[c(1,2)],function(xx) xx[c('label','description')]))
list(definitions = lapply(x[c(1,2)],function(xx) xx[c('label','description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(definitions = lapply(x[c(1,2)],function(xx) xx[c('name','text','label','description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(definitions = lapply(x[c(1,2)],function(xx) xx[c('text','label','description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(definitions = lapply(x[c(3)],function(xx) xx[c('text','label','description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(definitions = lapply(x[c(1,2)],function(xx) xx[c('label', 'name', 'description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(definitions = lapply(x[c(3)],function(xx) xx[c('label','name','description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(definitions = lapply(x,function(xx) xx[c('label', 'name', 'description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(acronyms = lapply(x[c(3)],function(xx) xx[c('label','name','description')]))%>%yaml::as.yaml()%>%cat(sep='\n')
list(
definitions = lapply(x[c(1,2)],function(xx) xx[c('label', 'name', 'description')]),
acronyms = lapply(x[c(3)],function(xx) xx[c('label','name','description')])
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = lapply(x[c(1,2)],function(xx) xx[[c('label', 'name', 'description')]]),
acronyms = lapply(x[c(3)],function(xx) xx[[c('label','name','description')]])
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = lapply(x[c(1,2)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- NULL
ret
}),
acronyms = lapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- NULL
ret
})
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = lapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = vapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
}, USE.NAMES = FALSE),
acronyms = vapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
}, USE.NAMES = FALSE)
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
?vapply
list(
definitions = vapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
}, FUN.VALUE = list(), USE.NAMES = FALSE),
acronyms = vapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
}, FUN.VALUE = list(), USE.NAMES = FALSE)
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = vapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
}, FUN.VALUE = c('label', 'name', 'description'), USE.NAMES = FALSE),
acronyms = vapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
}, FUN.VALUE = c('label', 'name', 'description'), USE.NAMES = FALSE)
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = vapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
}, FUN.VALUE = list('label', 'name', 'description'), USE.NAMES = FALSE),
acronyms = vapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
}, FUN.VALUE = list('label', 'name', 'description'), USE.NAMES = FALSE)
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
lapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
})
list(
definitions = lapply(x[c(1,2)],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[c(3)],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)
x
idx
which(sapply(x,'[[',1)=='definition')
match(sapply(x,'[[',1),'definition')
match('definition',sapply(x,'[[',1))
sapply(x,'[[',1)%in%'definition'
which(sapply(x,'[[',1)%in%'definition')
which(sapply(x,'[[',1)%in%'definition',arr.ind = TRUE)
sapply(x,'[[',1)%in%'definition'
idx <- sapply(x,'[[',1)%in%'definition'
list(
definitions = lapply(x[idx],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[!idx],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
names(x)
names(x) <- NULL
list(
definitions = lapply(x[idx],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[!idx],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)%>%
yaml::as.yaml()%>%
cat(sep='\n')
list(
definitions = lapply(x[idx],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[!idx],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)
glossary_to_yaml <- function(){
x <- get_entries()
idx <- sapply(x,'[[',1)%in%'definition'
names(x) <- NULL
out <- list(
definitions = lapply(x[idx],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[!idx],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)
yaml::as.yaml(out)
}
glossary_to_yaml()
glossary_to_yaml <- function(file, ...){
x <- get_entries()
idx <- sapply(x,'[[',1)%in%'definition'
names(x) <- NULL
out <- list(
definitions = lapply(x[idx],function(xx){
xx[c('label', 'name', 'description')]
}),
acronyms = lapply(x[!idx],function(xx){
ret <- xx[c('label', 'name', 'description')]
names(ret) <- c('label','abbrv','long')
ret
})
)
yaml::write_yaml(out,file, ...)
}
glossary_to_yaml(file = 'inst/test.yml')
yaml::read_yaml('inst/test.yml')
test <- yaml::read_yaml('inst/test.yml')
add_acronym(test$acronyms[[1]]$abbrv,test$acronyms[[1]]$label,test$acronyms[[1]]$long)
entry_names()
remove_entry('CD')
entry_names()
yaml::read_yaml('inst/test.yml')
yaml::read_yaml('inst/test.yml')
yaml::read_yaml('inst/test.yml')
yaml::read_yaml('inst/test.yml')
yaml::read_yaml('inst/test.yml')
x <- yaml::read_yaml('inst/test.yml')
x$definitions[[1]]
parse_entry <- function(obj){
list2env(obj)
browser()
}
parse_entry(x$definitions[[1]])
list2env(obj,envir = environment())
first
x <- yaml::read_yaml('inst/test.yml')
parse_entry(x$definitions[[1]])
parse_entry <- function(obj){
list2env(obj, envir = environment())
browser()
}
parse_entry(x$definitions[[1]])
obj
first
eval(parse(text = first))
library(glue)
eval(parse(text = first))
lapply(obj,function(x) eval(parse(text = x)))
eval(parse(text = first))
ls()
ls()[1]
as.name(ls()[1])
eval(parse(as.name(ls()[1]))
eval(parse(as.name(ls()[1])))
eval(as.name(ls()[1]))
eval(as.name(ls()[2]))
eval(as.name(ls()[3]))
eval(as.name(ls()[4]))
x <- yaml::read_yaml('inst/test.yml')
parse_entry(x$definitions[[1]])
lapply(obj,grepl('^`r'))
lapply(obj,function(x) grepl('^`r',x))
sapply(obj,function(x) grepl('^`r',x))
which(sapply(obj,function(x) grepl('^`r',x)))
names(which(sapply(obj,function(x) grepl('^`r',x))))
parse_entry <- function(obj){
idx <- which(sapply(obj,function(x) grepl('^`r',x)))
list2env(obj, envir = environment())
obj[[idx]] <- eval(parse(text = obj[[idx]]))
obj
}
parse_entry(x$definitions[[1]])
parse_entry <- function(obj){
idx <- which(sapply(obj,function(x) grepl('^`r',x)))
list2env(obj, envir = environment())
browser()
obj[[idx]] <- eval(parse(text = obj[[idx]]))
obj
}
parse_entry(x$definitions[[1]])
obj[[idx]]
gsub('^`r|`$','',obj[[idx]])
gsub('^`r |`$','',obj[[idx]])
parse_entry <- function(obj){
idx <- which(sapply(obj,function(x) grepl('^`r',x)))
list2env(obj, envir = environment())
txt <- gsub('^`r |`$','',obj[[idx]])
obj[[idx]] <- eval(parse(text = txt))
obj
}
parse_entry(x$definitions[[1]])
parse_entry <- function(obj){
idx <- which(sapply(obj,function(x) grepl('^`r',x)))
list2env(obj, envir = environment())
for(i in idx){
txt <- gsub('^`r |`$','',obj[[i]])
obj[[i]] <- eval(parse(text = txt))
}
obj
}
parse_entry(x$definitions[[1]])
x <- yaml::read_yaml('inst/test.yml')
parse_entry(x$definitions[[1]])
x <- yaml::read_yaml('inst/test.yml')
parse_entry(x$definitions[[1]])
lapply(x$definitions,parse_entry)
lapply(x,function(y) lapply(y,parse_entry))
parse_entries <- function(obj){
lapply(obj,function(x) lapply(x,parse_entry))
}
yaml::read_yaml('inst/test.yml')%>%
parse_entries()
?yaml::read_yaml
knitr::opts_chunk$set(echo = TRUE)
library(glossaries)
library(magrittr)
glossary$file
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::metadata
knitr::opts_chunk$set(echo = TRUE)
library(glossaries)
library(magrittr)
rmarkdown::metadata
?rmarkdown::metadata
rmarkdown::metadata$title
knitr::opts_chunk$set(echo = TRUE)
library(glossaries)
library(magrittr)
rmarkdown::metadata$title
rmarkdown::metadata
library(glossaries)
library(glossaries)
parent.frame()
parent.frames()
?parent.frame
sys.frames()
sys.parents()
sys.frame()
sys.frame(-1)
sys.frame()
library(glossaries)
.traceback()
.traceback(1)
library(glossaries)
library(glossaries)
library(glossaries)
str(rmarkdown::metadata)
library(glossaries)
library(glossaries)
library(glossaries)
library(glossaries)
library(glossaries)
library(glossaries)
library(glossaries)
g <- glossaries::use_glossary()
g
g <- glossaries::use_glossary(file = 'inst/test.yml')
g$list_entries()
g$load(file = 'inst/test.yml')
library(glossaries)
g <- glossaries::use_glossary()
g$load(file = 'inst/test.yml')
obj
seq(length(obj[[1]]))
obj[[1]][i]
i <- 1
obj[[1]][i]
obj[[1]][[i]]
library(glossaries)
g <- glossaries::use_glossary()
g$load(file = 'inst/test.yml')
library(glossaries)
g <- glossaries::use_glossary()
g$load(file = 'inst/test.yml')
obj[[2]][[i]]
self$new_acronym
library(glossaries)
g <- glossaries::use_glossary()
g$load(file = 'inst/test.yml')
g$list_entries()
knitr::opts_chunk$set(echo = TRUE)
get_entries()%>%
glossary_to_table()%>%
gt::gt()
get_entries()
library(glossaries)
usethis::use_mit_license()
pak::pkg_install('nx10/httpgd')
pak::pkg_install('ManuelHentschel/vscDebugger')
pak::pkg_install('REditorSupport/languageserver')
usethis::use_mit_license()
usethis::use_mit_license()
sinew::update_desc('R')
library(glossaries)
library(glossaries)
add_entry
usethis::use_vignette('usage','Basic Usage')
system.file('example/myglossary.yml',package = 'glossaries')
library(glossaries)
pkgdown::build_site()
library(glossaries)
library(glossaries)
library(glossaries)
library(glossaries)
library(glossaries)
pkgdown::build_site()
usethis::use_readme_md()
library(glossaries)
pkgdown::build_site()
git init
pkgdown::build_site()
